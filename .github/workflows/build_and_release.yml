name: Build and release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PKG_NAME: "gmuv"
  PKG_VER:  "${GITHUB_REF##*/}"
  OUTPUT_DIR: out

jobs:

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: ["arm", "arm64", "386", "amd64"]
        go: ["^1.18.1"]
      fail-fast: true

    name: Go ${{ matrix.go }} ${{ matrix.goos }} ${{ matrix.goarch }} build

    steps:
      - uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Build 
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          echo ${{ env.PKG_VER }}
          mkdir ${{ env.OUTPUT_DIR }}
          OUTPUT_PATH="${{ env.OUTPUT_DIR }}/${{ env.PKG_NAME }}_${{ env.PKG_VER }}_${{ matrix.goos }}_${{ matrix.goarch }}" make build

      - name: Upload result
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME }}
          path: ${{ env.OUTPUT_DIR }}/

  create-release:
    needs:
      - build-linux
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Create artifacts folder
        run: mkdir ${{ env.OUTPUT_DIR }}

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PKG_NAME }}
          path: ${{ env.OUTPUT_DIR }}

      - name: Create release
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag="${{ env.PKG_VER }}"
          assets=()
          cd ${{ env.OUTPUT_DIR }}
          for f in *; do assets+="-a ${f} "; done
          hub release create -m "create new release with ${tag} tag" "${assets[@]}""${tag}"