name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PKG_NAME: "gmuv"
  PKG_VER:  ${{ github.ref }}
  OUTPUT_DIR: out

jobs:

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: ["arm", "arm64", "386", "amd64"]
        go: ["^1.18.1"]
      fail-fast: true

    name: Go ${{ matrix.go }} ${{ matrix.goos }} ${{ matrix.goarch }} build

    steps:
      - uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Rewrite package's version if it contains a slash
        if: contains('${{ github.ref }}', '/')
        run: echo PKG_VER="latest" >> $GITHUB_ENV

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          mkdir ${{ env.OUTPUT_DIR }}
          OUTPUT_DIR="${{ env.OUTPUT_DIR }}" make build
          zip -r ${{ env.OUTPUT_DIR }}/${{ env.PKG_NAME }}_${{ env.PKG_VER }}_${{ matrix.goos }}_${{ matrix.goarch }}.zip ${{ env.OUTPUT_DIR }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.OUTPUT_DIR }}_${{ env.PKG_VER }}_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          path: ${{ env.OUTPUT_DIR }}/${{ env.PKG_NAME }}_${{ env.PKG_VER }}_${{ matrix.goos }}_${{ matrix.goarch }}.zip
